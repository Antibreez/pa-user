"use strict";!function(){var e=document.querySelectorAll(".input-file__label");function t(e){var t=e.querySelector("input"),n=e.parentNode.querySelector(".file-load__clear");function i(e){e.preventDefault(),e.stopPropagation()}function o(t){e.classList.add("highlight")}function s(t){e.classList.remove("highlight")}["dragenter","dragover","dragleave","drop"].forEach((function(t){e.addEventListener(t,i,!1)})),["dragenter","dragover"].forEach((function(t){e.addEventListener(t,o,!1)})),["dragleave","drop"].forEach((function(t){e.addEventListener(t,s,!1)})),e.addEventListener("drop",(function(e){var n=e.dataTransfer.files;t.files&&t.files[0]&&(t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file"));t.files=n,l()}),!1);var l=function(){a(t)},a=function(t){if(t.files&&t.files[0]){var n=new FileReader;n.onload=function(n){e.parentNode.classList.add("loaded"),e.nextElementSibling.querySelector(".file-load__name").textContent=t.files[0].name,window.onInstallationFileDrop&&window.onInstallationFileDrop()},n.readAsDataURL(t.files[0])}};t.addEventListener("change",l),n.addEventListener("click",(function(){e.parentNode.classList.remove("loaded"),t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file")}))}window.makeFileLoad=t,e[0]&&e.forEach((function(e){t(e)}))}(),function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"));var t,n;window.addEventListener("resize",(t=function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"))},function(e){n&&clearTimeout(n),n=setTimeout(t,100,e)}));var i=document.querySelector("body");function o(e,t){this.trigger=e,this.modal=t,this.overlay=this.modal.querySelector(".modal__overlay"),this.closeBtn=this.modal.querySelector(".modal__close"),this.onOverlayClick=this.onOverlayClick.bind(this),this.onCloseClick=this.onCloseClick.bind(this),this.onTriggerClick=this.onTriggerClick.bind(this),this.addEventListeners()}o.prototype.open=function(){this.modal.classList.add("js-show"),i.classList.add("js__body-no-scroll")},o.prototype.close=function(){this.modal.classList.remove("js-show"),i.classList.remove("js__body-no-scroll")},o.prototype.onOverlayClick=function(e){e.target===this.overlay&&this.close()},o.prototype.onCloseClick=function(){this.close()},o.prototype.onTriggerClick=function(){this.open()},o.prototype.addEventListeners=function(){this.overlay.addEventListener("click",this.onOverlayClick),this.closeBtn.addEventListener("click",this.onCloseClick),this.trigger.addEventListener("click",this.onTriggerClick)},window.Modal=o}(),function(){var e=document.querySelectorAll(".input-phone");if(e[0]){var t=new Inputmask("+7(999) 999-99-99");e.forEach((function(e){t.mask(e)}))}}(),function(){var e=document.querySelectorAll(".search"),t=document.querySelectorAll(".search + .search-close");e.forEach((function(e){e.addEventListener("focus",(function(){e.parentNode.parentNode.classList.add("js-focus")}))})),e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))})),t.forEach((function(e){e.addEventListener("click",(function(){var t=e.previousElementSibling;t.value="",t.classList.contains("js-inputed")&&t.classList.remove("js-inputed")}))}))}(),function(){var e=document.querySelector(".cloud-status__installation-form");if(e){var t=e.querySelector(".cloud-status__installation-company input"),n=(e.querySelectorAll(".cloud-status__installation-file"),e.querySelector(".input-file__input")),i=e.querySelector(".file-load__clear"),o=e.querySelector(".cloud-status__installation-form-send"),s=function(){return""!==n.value&&""!==t.value},l=function(){s()&&o.hasAttribute("disabled")&&o.removeAttribute("disabled"),s()||!o.hasAttribute("disabled")&&o.setAttribute("disabled","")};window.onInstallationFileDrop=function(){l()},n.addEventListener("change",window.onInstallationFileDrop),i.addEventListener("click",(function(){o.hasAttribute("disabled")||o.setAttribute("disabled","")})),t.addEventListener("input",l)}}(),function(){var e=document.querySelector(".contract-modal-trigger"),t=document.querySelector(".contract-modal");if(console.log(e+"   "+t),e&&t){new Modal(e,t);$(".contract-modal__toggle-btn").on("click",(function(){$(this).next().slideToggle(),$(this).children(".info-block__toggle-icon").toggleClass("opened")}))}}(),$(window).load((function(){new Swiper(".menu-pa__container",{freeMode:!0,slidesPerView:"auto",breakpoints:{1280:{freeMode:!0,slidesPerView:"auto",allowTouchMove:!1}}})})),$(".first-payment__devices-btn").on("click",(function(){$(this).next().slideToggle(),$(this).children(".first-payment__device-toggle-icon").toggleClass("opened")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
