"use strict";!function(){var e=document.querySelectorAll(".input-file__label");function t(e){var t=e.querySelector("input"),n=e.parentNode.querySelector(".file-load__clear");function o(e){e.preventDefault(),e.stopPropagation()}function i(t){e.classList.add("highlight")}function l(t){e.classList.remove("highlight")}["dragenter","dragover","dragleave","drop"].forEach((function(t){e.addEventListener(t,o,!1)})),["dragenter","dragover"].forEach((function(t){e.addEventListener(t,i,!1)})),["dragleave","drop"].forEach((function(t){e.addEventListener(t,l,!1)})),e.addEventListener("drop",(function(e){var n=e.dataTransfer.files;t.files&&t.files[0]&&(t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file"));t.files=n,r()}),!1);var r=function(){s(t)},s=function(t){if(t.files&&t.files[0]){var n=new FileReader;n.onload=function(n){e.parentNode.classList.add("loaded"),e.nextElementSibling.querySelector(".file-load__name").textContent=t.files[0].name,window.onInstallationFileDrop&&window.onInstallationFileDrop()},n.readAsDataURL(t.files[0])}};t.addEventListener("change",r),n.addEventListener("click",(function(){e.parentNode.classList.remove("loaded"),t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file")}))}window.makeFileLoad=t,e[0]&&e.forEach((function(e){t(e)}))}(),function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"));var t,n;window.addEventListener("resize",(t=function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"))},function(e){n&&clearTimeout(n),n=setTimeout(t,100,e)}));var o=document.querySelector("body");function i(e,t){this.trigger=e,this.modal=t,this.overlay=this.modal.querySelector(".modal__overlay"),this.closeBtn=this.modal.querySelector(".modal__close"),this.onOverlayClick=this.onOverlayClick.bind(this),this.onCloseClick=this.onCloseClick.bind(this),this.onTriggerClick=this.onTriggerClick.bind(this),this.addEventListeners()}i.prototype.open=function(){this.modal.classList.add("js-show"),o.classList.add("js__body-no-scroll")},i.prototype.close=function(){this.modal.classList.remove("js-show"),o.classList.remove("js__body-no-scroll")},i.prototype.onOverlayClick=function(e){e.target===this.overlay&&this.close()},i.prototype.onCloseClick=function(){this.close()},i.prototype.onTriggerClick=function(){this.open()},i.prototype.addEventListeners=function(){this.overlay.addEventListener("click",this.onOverlayClick),this.closeBtn.addEventListener("click",this.onCloseClick),this.trigger.addEventListener("click",this.onTriggerClick)},window.Modal=i}(),function(){var e=document.querySelectorAll(".input-phone");if(e[0]){var t=new Inputmask("+7(999) 999-99-99");e.forEach((function(e){t.mask(e)}))}}(),function(){var e=document.querySelectorAll(".search"),t=document.querySelectorAll(".search + .search-close");e.forEach((function(e){e.addEventListener("focus",(function(){e.parentNode.parentNode.classList.add("js-focus")}))})),e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))})),t.forEach((function(e){e.addEventListener("click",(function(){var t=e.previousElementSibling;t.value="",t.classList.contains("js-inputed")&&t.classList.remove("js-inputed")}))}))}(),function(){var e=document.querySelector(".cloud-status__installation-form");if(e){var t=e.querySelector(".cloud-status__installation-company input"),n=(e.querySelectorAll(".cloud-status__installation-file"),e.querySelector(".input-file__input")),o=e.querySelector(".file-load__clear"),i=e.querySelector(".cloud-status__installation-form-send"),l=function(){return""!==n.value&&""!==t.value},r=function(){l()&&i.hasAttribute("disabled")&&i.removeAttribute("disabled"),l()||!i.hasAttribute("disabled")&&i.setAttribute("disabled","")};window.onInstallationFileDrop=function(){r()},n.addEventListener("change",window.onInstallationFileDrop),o.addEventListener("click",(function(){i.hasAttribute("disabled")||i.setAttribute("disabled","")})),t.addEventListener("input",r)}}(),function(){var e=document.querySelector(".contract-modal-trigger"),t=document.querySelector(".contract-modal");if(e&&t){new Modal(e,t);$(".contract-modal__toggle-btn").on("click",(function(){$(this).next().slideToggle(),$(this).children(".info-block__toggle-icon").toggleClass("opened")}))}}(),$(window).load((function(){new Swiper(".menu-pa__container",{freeMode:!0,slidesPerView:"auto",breakpoints:{1280:{freeMode:!0,slidesPerView:"auto",allowTouchMove:!1}}})})),function(){var e=document.querySelector(".my-comfort-modal-trigger"),t=document.getElementById("my-comfort-modal");if(e&&t)new Modal(e,t)}(),function(){var e=document.querySelector(".my-comfort-plus-modal-trigger"),t=document.getElementById("my-comfort-plus-modal");if(e&&t)new Modal(e,t)}(),function(){var e=document.querySelector(".my-comfort-premium-modal-trigger"),t=document.getElementById("my-comfort-premium-modal");if(e&&t)new Modal(e,t)}(),$(".first-payment__devices-btn").on("click",(function(){$(this).next().slideToggle(),$(this).children(".first-payment__device-toggle-icon").toggleClass("opened")})),function(){var e=document.querySelector(".subscription-modal-trigger"),t=document.querySelector(".subscription-modal");if(e&&t){new Modal(e,t);$(".subscription-modal__toggle-item-btn").on("click",(function(){$(this).next().slideToggle(),$(this).children(".info-block__toggle-icon").toggleClass("opened")}))}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJpbnB1dC1maWxlLmpzIiwibW9kYWwuanMiLCJwaG9uZS1tYXNrLmpzIiwic2VhcmNoLmpzIiwiY2xvdWQtaW5zdGFsbGF0aW9uLmpzIiwiY29udHJhY3QtbW9kYWwuanMiLCJtZW51LXBhLmpzIiwibXktY29tZm9ydC1tb2RhbC5qcyIsIm15LWNvbWZvcnQtcGx1cy1tb2RhbC5qcyIsIm15LWNvbWZvcnQtcHJlbWl1bS1tb2RhbC5qcyIsInBheW1lbnRzLWRldmljZXMuanMiLCJzdWJzY3JpcHRpb24tbW9kYWwuanMiXSwibmFtZXMiOlsiZmlsZURyb3BBcmVhIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwibWFrZUZpbGVMb2FkIiwiZmlsZUlucHV0IiwicXVlcnlTZWxlY3RvciIsImZpbGVDbGVhciIsInBhcmVudE5vZGUiLCJwcmV2ZW50RGVmYXVsdHMiLCJlIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJoaWdobGlnaHQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ1bmhpZ2hsaWdodCIsInJlbW92ZSIsImZvckVhY2giLCJldmVudE5hbWUiLCJhZGRFdmVudExpc3RlbmVyIiwiZmlsZXMiLCJkYXRhVHJhbnNmZXIiLCJ2YWx1ZSIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ0eXBlIiwib25GaWxlQ2hhbmdlIiwicmVhZFVybCIsImlucHV0IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsIm5leHRFbGVtZW50U2libGluZyIsInRleHRDb250ZW50IiwibmFtZSIsIndpbmRvdyIsIm9uSW5zdGFsbGF0aW9uRmlsZURyb3AiLCJyZWFkQXNEYXRhVVJMIiwiaXRlbSIsInZoIiwiaW5uZXJIZWlnaHQiLCJkb2N1bWVudEVsZW1lbnQiLCJzdHlsZSIsInNldFByb3BlcnR5IiwiY29uY2F0IiwiZnVuYyIsInRpbWVyIiwiZXZlbnQiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiJGJvZHkiLCJNb2RhbCIsInRyaWdnZXIiLCJtb2RhbCIsInRoaXMiLCJvdmVybGF5IiwiY2xvc2VCdG4iLCJvbk92ZXJsYXlDbGljayIsImJpbmQiLCJvbkNsb3NlQ2xpY2siLCJvblRyaWdnZXJDbGljayIsImFkZEV2ZW50TGlzdGVuZXJzIiwicHJvdG90eXBlIiwib3BlbiIsImNsb3NlIiwidGFyZ2V0IiwiaW5wdXRzIiwiaW0iLCJJbnB1dG1hc2siLCJtYXNrIiwiaXRlbXMiLCJzcGxpdCIsImpvaW4iLCJjb250YWlucyIsInNlYXJjaCIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJmb3JtIiwiY29tcGFueSIsInNlbmRCdG4iLCJpc0Zvcm1GaWxsZWQiLCJjaGVja0lucHV0cyIsImhhc0F0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsImNvbnRyYWN0QnRuIiwibW9kYWxDb250cmFjdCIsIiQiLCJvbiIsIm5leHQiLCJzbGlkZVRvZ2dsZSIsImNoaWxkcmVuIiwidG9nZ2xlQ2xhc3MiLCJsb2FkIiwiU3dpcGVyIiwiZnJlZU1vZGUiLCJzbGlkZXNQZXJWaWV3IiwiYnJlYWtwb2ludHMiLCIxMjgwIiwiYWxsb3dUb3VjaE1vdmUiLCIkbW9kYWxCdG4iLCIkbW9kYWwiLCJnZXRFbGVtZW50QnlJZCIsInN1YnNjcmlwdGlvbkJ0biIsIm1vZGFsU3Vic2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQSxjQ0FBLFdBQ0EsSUFBQUEsRUFBQUMsU0FBQUMsaUJBQUEsc0JBRUEsU0FBQUMsRUFBQUgsR0FDQSxJQUFBSSxFQUFBSixFQUFBSyxjQUFBLFNBQ0FDLEVBQUFOLEVBQUFPLFdBQUFGLGNBQUEscUJBT0EsU0FBQUcsRUFBQUMsR0FDQUEsRUFBQUMsaUJBQ0FELEVBQUFFLGtCQWFBLFNBQUFDLEVBQUFILEdBQ0FULEVBQUFhLFVBQUFDLElBQUEsYUFHQSxTQUFBQyxFQUFBTixHQUNBVCxFQUFBYSxVQUFBRyxPQUFBLGFBeEJBLENBQUEsWUFBQSxXQUFBLFlBQUEsUUFBQUMs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QUFBQyxFQUlBLElBQUFqRCxNQUFBZ0QsRUFBQUMsR0FSQSxHQ0FBLFdBQ0EsSUFBQUQsRUFBQW5HLFNBQUFJLGNBQUEscUNBQ0FnRyxFQUFBcEcsU0FBQXFHLGVBQUEsNEJBRUEsR0FBQUYsR0FBQUMsRUFJQSxJQUFBakQsTUFBQWdELEVBQUFDLEdBUkEsR0NDQWQsRUFBQSwrQkFBQUMsR0FBQSxTQUFBLFdBQ0FELEVBQUFoQyxNQUFBa0MsT0FBQUMsY0FDQUgsRUFBQWhDLE1BQ0FvQyxTQUFBLHNDQUNBQyxZQUFBLGFDTEEsV0FDQSxJQUFBVyxFQUFBdEcsU0FBQUksY0FBQSwrQkFDQW1HLEVBQUF2RyxTQUFBSSxjQUFBLHVCQUVBLEdBQUFrRyxHQUFBQyxFQUFBLENBSUEsSUFBQXBELE1BQUFtRCxFQUFBQyxHQUVBakIsRUFBQSx3Q0FBQUMsR0FBQSxTQUFBLFdBQ0FELEVBQUFoQyxNQUFBa0MsT0FBQUMsY0FDQUgsRUFBQWhDLE1BQUFvQyxTQUFBLDRCQUFBQyxZQUFBLGNBWkEiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuKGZ1bmN0aW9uICgpIHtcbiAgdmFyIGZpbGVEcm9wQXJlYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pbnB1dC1maWxlX19sYWJlbCcpO1xuXG4gIGZ1bmN0aW9uIG1ha2VGaWxlTG9hZChmaWxlRHJvcEFyZWEpIHtcbiAgICB2YXIgZmlsZUlucHV0ID0gZmlsZURyb3BBcmVhLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XG4gICAgdmFyIGZpbGVDbGVhciA9IGZpbGVEcm9wQXJlYS5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJy5maWxlLWxvYWRfX2NsZWFyJyk7IC8vINCh0LHRgNCw0YHRi9Cy0LDQtdC8INGB0YLQsNC90LTQsNGA0YLQvdGL0LUg0YHQvtCx0YvRgtC40Y8g0L/RgNC4INC/0LXRgNC10YLQsNGB0LrQuNCy0LDQvdC40Lgg0YTQsNC50LvQsFxuXG4gICAgWydkcmFnZW50ZXInLCAnZHJhZ292ZXInLCAnZHJhZ2xlYXZlJywgJ2Ryb3AnXS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgICAgIGZpbGVEcm9wQXJlYS5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgcHJldmVudERlZmF1bHRzLCBmYWxzZSk7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBwcmV2ZW50RGVmYXVsdHMoZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG5cbiAgICA7IC8vINCU0L7QsdCw0LLQu9GP0LXQvCDRgdGC0LjQu9C4INC/0YDQuCDQv9C10YDQtdGC0LDRgdC60LjQstCw0L3QuNC4INGE0LDQudC70LAg0L3QsNC0INC90YPQttC90L7QuSDQvtCx0LvQsNGB0YLRjNGOXG5cbiAgICBbJ2RyYWdlbnRlcicsICdkcmFnb3ZlciddLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50TmFtZSkge1xuICAgICAgZmlsZURyb3BBcmVhLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoaWdobGlnaHQsIGZhbHNlKTtcbiAgICB9KTtcbiAgICBbJ2RyYWdsZWF2ZScsICdkcm9wJ10uZm9yRWFjaChmdW5jdGlvbiAoZXZlbnROYW1lKSB7XG4gICAgICBmaWxlRHJvcEFyZWEuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIHVuaGlnaGxpZ2h0LCBmYWxzZSk7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBoaWdobGlnaHQoZSkge1xuICAgICAgZmlsZURyb3BBcmVhLmNsYXNzTGlzdC5hZGQoJ2hpZ2hsaWdodCcpO1xuICAgIH1cblxuICAgIDtcblxuICAgIGZ1bmN0aW9uIHVuaGlnaGxpZ2h0KGUpIHtcbiAgICAgIGZpbGVEcm9wQXJlYS5jbGFzc0xpc3QucmVtb3ZlKCdoaWdobGlnaHQnKTtcbiAgICB9XG5cbiAgICA7IC8vXG5cbiAgICBmaWxlRHJvcEFyZWEuYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsIGhhbmRsZURyb3AsIGZhbHNlKTtcblxuICAgIGZ1bmN0aW9uIGhhbmRsZURyb3AoZSkge1xuICAgICAgdmFyIGR0ID0gZS5kYXRhVHJhbnNmZXI7XG4gICAgICB2YXIgZmlsZXMgPSBkdC5maWxlcztcblxuICAgICAgaWYgKGZpbGVJbnB1dC5maWxlcyAmJiBmaWxlSW5wdXQuZmlsZXNbMF0pIHtcbiAgICAgICAgZmlsZUlucHV0LnZhbHVlID0gJyc7XG5cbiAgICAgICAgaWYgKCEvc2FmYXJpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSkge1xuICAgICAgICAgIGZpbGVJbnB1dC50eXBlID0gJyc7XG4gICAgICAgICAgZmlsZUlucHV0LnR5cGUgPSAnZmlsZSc7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZmlsZUlucHV0LmZpbGVzID0gZmlsZXM7XG4gICAgICBvbkZpbGVDaGFuZ2UoKTtcbiAgICB9XG5cbiAgICA7XG5cbiAgICB2YXIgb25GaWxlQ2hhbmdlID0gZnVuY3Rpb24gb25GaWxlQ2hhbmdlKCkge1xuICAgICAgcmVhZFVybChmaWxlSW5wdXQpO1xuICAgIH07XG5cbiAgICB2YXIgcmVhZFVybCA9IGZ1bmN0aW9uIHJlYWRVcmwoaW5wdXQpIHtcbiAgICAgIGlmIChpbnB1dC5maWxlcyAmJiBpbnB1dC5maWxlc1swXSkge1xuICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcblxuICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBmaWxlRHJvcEFyZWEucGFyZW50Tm9kZS5jbGFzc0xpc3QuYWRkKCdsb2FkZWQnKTtcbiAgICAgICAgICBmaWxlRHJvcEFyZWEubmV4dEVsZW1lbnRTaWJsaW5nLnF1ZXJ5U2VsZWN0b3IoJy5maWxlLWxvYWRfX25hbWUnKS50ZXh0Q29udGVudCA9IGlucHV0LmZpbGVzWzBdLm5hbWU7XG4gICAgICAgICAgd2luZG93Lm9uSW5zdGFsbGF0aW9uRmlsZURyb3AgJiYgd2luZG93Lm9uSW5zdGFsbGF0aW9uRmlsZURyb3AoKTtcbiAgICAgICAgfTtcblxuICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChpbnB1dC5maWxlc1swXSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIG9uQ2xlYXIoKSB7XG4gICAgICBmaWxlRHJvcEFyZWEucGFyZW50Tm9kZS5jbGFzc0xpc3QucmVtb3ZlKCdsb2FkZWQnKTtcbiAgICAgIGZpbGVJbnB1dC52YWx1ZSA9ICcnO1xuXG4gICAgICBpZiAoIS9zYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgICAgIGZpbGVJbnB1dC50eXBlID0gJyc7XG4gICAgICAgIGZpbGVJbnB1dC50eXBlID0gJ2ZpbGUnO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZpbGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBvbkZpbGVDaGFuZ2UpO1xuICAgIGZpbGVDbGVhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uQ2xlYXIpO1xuICB9XG5cbiAgd2luZG93Lm1ha2VGaWxlTG9hZCA9IG1ha2VGaWxlTG9hZDtcblxuICBpZiAoIWZpbGVEcm9wQXJlYVswXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZpbGVEcm9wQXJlYS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgbWFrZUZpbGVMb2FkKGl0ZW0pO1xuICB9KTtcbn0pKCk7XG5cbihmdW5jdGlvbiAoKSB7XG4gIHZhciB2aCA9IHdpbmRvdy5pbm5lckhlaWdodCAqIDAuMDE7XG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS12aCcsIFwiXCIuY29uY2F0KHZoLCBcInB4XCIpKTtcblxuICB2YXIgb25SZXNpemUgPSBmdW5jdGlvbiBvblJlc2l6ZSgpIHtcbiAgICB2YXIgdmggPSB3aW5kb3cuaW5uZXJIZWlnaHQgKiAwLjAxO1xuICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS12aCcsIFwiXCIuY29uY2F0KHZoLCBcInB4XCIpKTtcbiAgfTtcblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZGVib3VuY2Uob25SZXNpemUpKTtcbiAgdmFyICRib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpO1xuXG4gIGZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMpIHtcbiAgICB2YXIgdGltZXI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKHRpbWVyKSBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmMsIDEwMCwgZXZlbnQpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBNb2RhbCh0cmlnZ2VyLCBtb2RhbCkge1xuICAgIHRoaXMudHJpZ2dlciA9IHRyaWdnZXI7XG4gICAgdGhpcy5tb2RhbCA9IG1vZGFsO1xuICAgIHRoaXMub3ZlcmxheSA9IHRoaXMubW9kYWwucXVlcnlTZWxlY3RvcignLm1vZGFsX19vdmVybGF5Jyk7XG4gICAgdGhpcy5jbG9zZUJ0biA9IHRoaXMubW9kYWwucXVlcnlTZWxlY3RvcignLm1vZGFsX19jbG9zZScpO1xuICAgIHRoaXMub25PdmVybGF5Q2xpY2sgPSB0aGlzLm9uT3ZlcmxheUNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vbkNsb3NlQ2xpY2sgPSB0aGlzLm9uQ2xvc2VDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25UcmlnZ2VyQ2xpY2sgPSB0aGlzLm9uVHJpZ2dlckNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLm9wZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5tb2RhbC5jbGFzc0xpc3QuYWRkKCdqcy1zaG93Jyk7XG4gICAgJGJvZHkuY2xhc3NMaXN0LmFkZCgnanNfX2JvZHktbm8tc2Nyb2xsJyk7XG4gIH07XG5cbiAgTW9kYWwucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMubW9kYWwuY2xhc3NMaXN0LnJlbW92ZSgnanMtc2hvdycpO1xuICAgICRib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2pzX19ib2R5LW5vLXNjcm9sbCcpO1xuICB9O1xuXG4gIE1vZGFsLnByb3RvdHlwZS5vbk92ZXJsYXlDbGljayA9IGZ1bmN0aW9uIChlKSB7XG4gICAgaWYgKGUudGFyZ2V0ID09PSB0aGlzLm92ZXJsYXkpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH07XG5cbiAgTW9kYWwucHJvdG90eXBlLm9uQ2xvc2VDbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmNsb3NlKCk7XG4gIH07XG5cbiAgTW9kYWwucHJvdG90eXBlLm9uVHJpZ2dlckNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMub3BlbigpO1xuICB9O1xuXG4gIE1vZGFsLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLm92ZXJsYXkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm9uT3ZlcmxheUNsaWNrKTtcbiAgICB0aGlzLmNsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vbkNsb3NlQ2xpY2spO1xuICAgIHRoaXMudHJpZ2dlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25UcmlnZ2VyQ2xpY2spO1xuICB9O1xuXG4gIHdpbmRvdy5Nb2RhbCA9IE1vZGFsO1xufSkoKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgdmFyIGlucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pbnB1dC1waG9uZScpO1xuXG4gIGlmICghaW5wdXRzWzBdKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGltID0gbmV3IElucHV0bWFzayhcIis3KDk5OSkgOTk5LTk5LTk5XCIpO1xuICBpbnB1dHMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xuICAgIGltLm1hc2soaXRlbSk7XG4gIH0pO1xufSkoKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgdmFyIGl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNlYXJjaCcpO1xuICB2YXIgY2xvc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2VhcmNoICsgLnNlYXJjaC1jbG9zZScpO1xuICBpdGVtcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGl0ZW0ucGFyZW50Tm9kZS5wYXJlbnROb2RlLmNsYXNzTGlzdC5hZGQoJ2pzLWZvY3VzJyk7XG4gICAgfSk7XG4gIH0pO1xuICBpdGVtcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGl0ZW0udmFsdWUuc3BsaXQoJyAnKS5qb2luKCcnKSA9PT0gJycpIHtcbiAgICAgICAgaXRlbS52YWx1ZSA9ICcnO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbS52YWx1ZSAhPT0gJycgJiYgIWl0ZW0uY2xhc3NMaXN0LmNvbnRhaW5zKCdqcy1pbnB1dGVkJykpIHtcbiAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdqcy1pbnB1dGVkJyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtLnZhbHVlID09PSAnJyAmJiBpdGVtLmNsYXNzTGlzdC5jb250YWlucygnanMtaW5wdXRlZCcpKSB7XG4gICAgICAgIGl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnanMtaW5wdXRlZCcpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbiAgY2xvc2UuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xuICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc2VhcmNoID0gaXRlbS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xuICAgICAgc2VhcmNoLnZhbHVlID0gJyc7XG5cbiAgICAgIGlmIChzZWFyY2guY2xhc3NMaXN0LmNvbnRhaW5zKCdqcy1pbnB1dGVkJykpIHtcbiAgICAgICAgc2VhcmNoLmNsYXNzTGlzdC5yZW1vdmUoJ2pzLWlucHV0ZWQnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59KSgpO1xuXG4oZnVuY3Rpb24gKCkge1xuICB2YXIgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jbG91ZC1zdGF0dXNfX2luc3RhbGxhdGlvbi1mb3JtJyk7XG5cbiAgaWYgKCFmb3JtKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGNvbXBhbnkgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJy5jbG91ZC1zdGF0dXNfX2luc3RhbGxhdGlvbi1jb21wYW55IGlucHV0Jyk7XG4gIHZhciBmaWxlSW5wdXRCbG9jayA9IGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnLmNsb3VkLXN0YXR1c19faW5zdGFsbGF0aW9uLWZpbGUnKTtcbiAgdmFyIGZpbGVJbnB1dCA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmlucHV0LWZpbGVfX2lucHV0Jyk7XG4gIHZhciBmaWxlQ2xlYXIgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJy5maWxlLWxvYWRfX2NsZWFyJyk7XG4gIHZhciBzZW5kQnRuID0gZm9ybS5xdWVyeVNlbGVjdG9yKCcuY2xvdWQtc3RhdHVzX19pbnN0YWxsYXRpb24tZm9ybS1zZW5kJyk7XG5cbiAgdmFyIGlzRm9ybUZpbGxlZCA9IGZ1bmN0aW9uIGlzRm9ybUZpbGxlZCgpIHtcbiAgICB2YXIgZmlsbGVkID0gdHJ1ZTtcblxuICAgIGlmIChmaWxlSW5wdXQudmFsdWUgPT09ICcnIHx8IGNvbXBhbnkudmFsdWUgPT09ICcnKSB7XG4gICAgICBmaWxsZWQgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgZmlsbGVkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmlsbGVkO1xuICB9O1xuXG4gIHZhciBjaGVja0lucHV0cyA9IGZ1bmN0aW9uIGNoZWNrSW5wdXRzKCkge1xuICAgIGlmIChpc0Zvcm1GaWxsZWQoKSkge1xuICAgICAgc2VuZEJ0bi5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJykgJiYgc2VuZEJ0bi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgfVxuXG4gICAgaWYgKCFpc0Zvcm1GaWxsZWQoKSkge1xuICAgICAgIXNlbmRCdG4uaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpICYmIHNlbmRCdG4uc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICcnKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIG9uRmlsZUNsZWFyID0gZnVuY3Rpb24gb25GaWxlQ2xlYXIoKSB7XG4gICAgaWYgKCFzZW5kQnRuLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKSkge1xuICAgICAgc2VuZEJ0bi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJycpO1xuICAgIH1cbiAgfTtcblxuICB3aW5kb3cub25JbnN0YWxsYXRpb25GaWxlRHJvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICBjaGVja0lucHV0cygpO1xuICB9O1xuXG4gIGZpbGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB3aW5kb3cub25JbnN0YWxsYXRpb25GaWxlRHJvcCk7XG4gIGZpbGVDbGVhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uRmlsZUNsZWFyKTtcbiAgY29tcGFueS5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGNoZWNrSW5wdXRzKTtcbn0pKCk7XG5cbihmdW5jdGlvbiAoKSB7XG4gIHZhciBjb250cmFjdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250cmFjdC1tb2RhbC10cmlnZ2VyJyk7XG4gIHZhciBtb2RhbENvbnRyYWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRyYWN0LW1vZGFsJyk7XG5cbiAgaWYgKCFjb250cmFjdEJ0biB8fCAhbW9kYWxDb250cmFjdCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBtb2RhbCA9IG5ldyBNb2RhbChjb250cmFjdEJ0biwgbW9kYWxDb250cmFjdCk7XG4gICQoJy5jb250cmFjdC1tb2RhbF9fdG9nZ2xlLWJ0bicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAkKHRoaXMpLm5leHQoKS5zbGlkZVRvZ2dsZSgpO1xuICAgICQodGhpcykuY2hpbGRyZW4oJy5pbmZvLWJsb2NrX190b2dnbGUtaWNvbicpLnRvZ2dsZUNsYXNzKCdvcGVuZWQnKTtcbiAgfSk7XG59KSgpO1xuXG4oZnVuY3Rpb24gKCkge1xuICAkKHdpbmRvdykubG9hZChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN3aXBlciA9IG5ldyBTd2lwZXIoJy5tZW51LXBhX19jb250YWluZXInLCB7XG4gICAgICBmcmVlTW9kZTogdHJ1ZSxcbiAgICAgIHNsaWRlc1BlclZpZXc6ICdhdXRvJyxcbiAgICAgIGJyZWFrcG9pbnRzOiB7XG4gICAgICAgIDEyODA6IHtcbiAgICAgICAgICBmcmVlTW9kZTogdHJ1ZSxcbiAgICAgICAgICBzbGlkZXNQZXJWaWV3OiAnYXV0bycsXG4gICAgICAgICAgYWxsb3dUb3VjaE1vdmU6IGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59KSgpO1xuXG4oZnVuY3Rpb24gKCkge1xuICB2YXIgJG1vZGFsQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm15LWNvbWZvcnQtbW9kYWwtdHJpZ2dlcicpO1xuICB2YXIgJG1vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215LWNvbWZvcnQtbW9kYWwnKTtcblxuICBpZiAoISRtb2RhbEJ0biB8fCAhJG1vZGFsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIG1vZGFsID0gbmV3IE1vZGFsKCRtb2RhbEJ0biwgJG1vZGFsKTtcbn0pKCk7XG5cbihmdW5jdGlvbiAoKSB7XG4gIHZhciAkbW9kYWxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubXktY29tZm9ydC1wbHVzLW1vZGFsLXRyaWdnZXInKTtcbiAgdmFyICRtb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteS1jb21mb3J0LXBsdXMtbW9kYWwnKTtcblxuICBpZiAoISRtb2RhbEJ0biB8fCAhJG1vZGFsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIG1vZGFsID0gbmV3IE1vZGFsKCRtb2RhbEJ0biwgJG1vZGFsKTtcbn0pKCk7XG5cbihmdW5jdGlvbiAoKSB7XG4gIHZhciAkbW9kYWxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubXktY29tZm9ydC1wcmVtaXVtLW1vZGFsLXRyaWdnZXInKTtcbiAgdmFyICRtb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteS1jb21mb3J0LXByZW1pdW0tbW9kYWwnKTtcblxuICBpZiAoISRtb2RhbEJ0biB8fCAhJG1vZGFsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIG1vZGFsID0gbmV3IE1vZGFsKCRtb2RhbEJ0biwgJG1vZGFsKTtcbn0pKCk7XG5cbihmdW5jdGlvbiAoKSB7XG4gICQoJy5maXJzdC1wYXltZW50X19kZXZpY2VzLWJ0bicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAkKHRoaXMpLm5leHQoKS5zbGlkZVRvZ2dsZSgpO1xuICAgICQodGhpcykuY2hpbGRyZW4oJy5maXJzdC1wYXltZW50X19kZXZpY2UtdG9nZ2xlLWljb24nKS50b2dnbGVDbGFzcygnb3BlbmVkJyk7XG4gIH0pO1xufSkoKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN1YnNjcmlwdGlvbkJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zdWJzY3JpcHRpb24tbW9kYWwtdHJpZ2dlcicpO1xuICB2YXIgbW9kYWxTdWJzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3Vic2NyaXB0aW9uLW1vZGFsJyk7XG5cbiAgaWYgKCFzdWJzY3JpcHRpb25CdG4gfHwgIW1vZGFsU3Vic2NyaXB0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIG1vZGFsID0gbmV3IE1vZGFsKHN1YnNjcmlwdGlvbkJ0biwgbW9kYWxTdWJzY3JpcHRpb24pO1xuICAkKCcuc3Vic2NyaXB0aW9uLW1vZGFsX190b2dnbGUtaXRlbS1idG4nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgJCh0aGlzKS5uZXh0KCkuc2xpZGVUb2dnbGUoKTtcbiAgICAkKHRoaXMpLmNoaWxkcmVuKCcuaW5mby1ibG9ja19fdG9nZ2xlLWljb24nKS50b2dnbGVDbGFzcygnb3BlbmVkJyk7XG4gIH0pO1xufSkoKTsiLCIoZnVuY3Rpb24oKSB7XG4gIGNvbnN0IGZpbGVEcm9wQXJlYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pbnB1dC1maWxlX19sYWJlbCcpO1xuXG4gIGZ1bmN0aW9uIG1ha2VGaWxlTG9hZChmaWxlRHJvcEFyZWEpIHtcbiAgICBjb25zdCBmaWxlSW5wdXQgPSBmaWxlRHJvcEFyZWEucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcbiAgICBjb25zdCBmaWxlQ2xlYXIgPSBmaWxlRHJvcEFyZWEucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCcuZmlsZS1sb2FkX19jbGVhcicpO1xuICAgIC8vINCh0LHRgNCw0YHRi9Cy0LDQtdC8INGB0YLQsNC90LTQsNGA0YLQvdGL0LUg0YHQvtCx0YvRgtC40Y8g0L/RgNC4INC/0LXRgNC10YLQsNGB0LrQuNCy0LDQvdC40Lgg0YTQsNC50LvQsFxuXG4gICAgWydkcmFnZW50ZXInLCAnZHJhZ292ZXInLCAnZHJhZ2xlYXZlJywgJ2Ryb3AnXS5mb3JFYWNoKGV2ZW50TmFtZSA9PiB7XG4gICAgICBmaWxlRHJvcEFyZWEuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIHByZXZlbnREZWZhdWx0cywgZmFsc2UpXG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBwcmV2ZW50RGVmYXVsdHMgKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfTtcblxuICAgIC8vINCU0L7QsdCw0LLQu9GP0LXQvCDRgdGC0LjQu9C4INC/0YDQuCDQv9C10YDQtdGC0LDRgdC60LjQstCw0L3QuNC4INGE0LDQudC70LAg0L3QsNC0INC90YPQttC90L7QuSDQvtCx0LvQsNGB0YLRjNGOXG5cbiAgICBbJ2RyYWdlbnRlcicsICdkcmFnb3ZlciddLmZvckVhY2goZXZlbnROYW1lID0+IHtcbiAgICAgIGZpbGVEcm9wQXJlYS5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgaGlnaGxpZ2h0LCBmYWxzZSlcbiAgICB9KTtcblxuICAgIFsnZHJhZ2xlYXZlJywgJ2Ryb3AnXS5mb3JFYWNoKGV2ZW50TmFtZSA9PiB7XG4gICAgICBmaWxlRHJvcEFyZWEuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIHVuaGlnaGxpZ2h0LCBmYWxzZSlcbiAgICB9KVxuXG4gICAgZnVuY3Rpb24gaGlnaGxpZ2h0KGUpIHtcbiAgICAgIGZpbGVEcm9wQXJlYS5jbGFzc0xpc3QuYWRkKCdoaWdobGlnaHQnKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gdW5oaWdobGlnaHQoZSkge1xuICAgICAgZmlsZURyb3BBcmVhLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZ2hsaWdodCcpO1xuICAgIH07XG5cbiAgICAvL1xuXG4gICAgZmlsZURyb3BBcmVhLmFkZEV2ZW50TGlzdGVuZXIoJ2Ryb3AnLCBoYW5kbGVEcm9wLCBmYWxzZSlcblxuICAgIGZ1bmN0aW9uIGhhbmRsZURyb3AoZSkge1xuICAgICAgbGV0IGR0ID0gZS5kYXRhVHJhbnNmZXJcbiAgICAgIGxldCBmaWxlcyA9IGR0LmZpbGVzXG5cbiAgICAgIGlmIChmaWxlSW5wdXQuZmlsZXMgJiYgZmlsZUlucHV0LmZpbGVzWzBdKSB7XG4gICAgICAgIGZpbGVJbnB1dC52YWx1ZSA9ICcnO1xuXG4gICAgICAgIGlmKCEvc2FmYXJpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSl7XG4gICAgICAgICAgZmlsZUlucHV0LnR5cGUgPSAnJztcbiAgICAgICAgICBmaWxlSW5wdXQudHlwZSA9ICdmaWxlJztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmaWxlSW5wdXQuZmlsZXMgPSBmaWxlcztcbiAgICAgIG9uRmlsZUNoYW5nZSgpO1xuXG4gICAgfTtcblxuICAgIGNvbnN0IG9uRmlsZUNoYW5nZSA9ICgpID0+IHtcbiAgICAgIHJlYWRVcmwoZmlsZUlucHV0KTtcbiAgICB9XG5cbiAgICBjb25zdCByZWFkVXJsID0gKGlucHV0KSA9PiB7XG4gICAgICBpZiAoaW5wdXQuZmlsZXMgJiYgaW5wdXQuZmlsZXNbMF0pIHtcbiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG5cbiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgZmlsZURyb3BBcmVhLnBhcmVudE5vZGUuY2xhc3NMaXN0LmFkZCgnbG9hZGVkJyk7XG4gICAgICAgICAgZmlsZURyb3BBcmVhXG4gICAgICAgICAgICAubmV4dEVsZW1lbnRTaWJsaW5nXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvcignLmZpbGUtbG9hZF9fbmFtZScpXG4gICAgICAgICAgICAudGV4dENvbnRlbnQgPSBpbnB1dC5maWxlc1swXS5uYW1lO1xuICAgICAgICAgICAgd2luZG93Lm9uSW5zdGFsbGF0aW9uRmlsZURyb3AgJiYgd2luZG93Lm9uSW5zdGFsbGF0aW9uRmlsZURyb3AoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGlucHV0LmZpbGVzWzBdKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbkNsZWFyKCkge1xuICAgICAgZmlsZURyb3BBcmVhLnBhcmVudE5vZGUuY2xhc3NMaXN0LnJlbW92ZSgnbG9hZGVkJyk7XG5cbiAgICAgIGZpbGVJbnB1dC52YWx1ZSA9ICcnO1xuXG4gICAgICBpZighL3NhZmFyaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe1xuICAgICAgICBmaWxlSW5wdXQudHlwZSA9ICcnO1xuICAgICAgICBmaWxlSW5wdXQudHlwZSA9ICdmaWxlJztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmaWxlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgb25GaWxlQ2hhbmdlKTtcbiAgICBmaWxlQ2xlYXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbkNsZWFyKTtcbiAgfVxuXG4gIHdpbmRvdy5tYWtlRmlsZUxvYWQgPSBtYWtlRmlsZUxvYWQ7XG5cblxuICBpZiAoIWZpbGVEcm9wQXJlYVswXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZpbGVEcm9wQXJlYS5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICBtYWtlRmlsZUxvYWQoaXRlbSk7XG4gIH0pO1xufSkoKTtcbiIsIigoKSA9PiB7XG4gIGxldCB2aCA9IHdpbmRvdy5pbm5lckhlaWdodCAqIDAuMDE7XG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS12aCcsIGAke3ZofXB4YCk7XG5cbiAgY29uc3Qgb25SZXNpemUgPSBmdW5jdGlvbigpIHtcbiAgICAgIGxldCB2aCA9IHdpbmRvdy5pbm5lckhlaWdodCAqIDAuMDE7XG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tdmgnLCBgJHt2aH1weGApO1xuICB9O1xuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBkZWJvdW5jZShvblJlc2l6ZSkpO1xuXG4gIGNvbnN0ICRib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpO1xuXG4gIGZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMpe1xuICAgIHZhciB0aW1lcjtcbiAgICByZXR1cm4gZnVuY3Rpb24oZXZlbnQpe1xuICAgICAgaWYodGltZXIpIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuYywxMDAsZXZlbnQpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBNb2RhbCAodHJpZ2dlciwgbW9kYWwpIHtcbiAgICB0aGlzLnRyaWdnZXIgPSB0cmlnZ2VyO1xuICAgIHRoaXMubW9kYWwgPSBtb2RhbDtcbiAgICB0aGlzLm92ZXJsYXkgPSB0aGlzLm1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fb3ZlcmxheScpO1xuICAgIHRoaXMuY2xvc2VCdG4gPSB0aGlzLm1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fY2xvc2UnKTtcblxuICAgIHRoaXMub25PdmVybGF5Q2xpY2sgPSB0aGlzLm9uT3ZlcmxheUNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vbkNsb3NlQ2xpY2sgPSB0aGlzLm9uQ2xvc2VDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25UcmlnZ2VyQ2xpY2sgPSB0aGlzLm9uVHJpZ2dlckNsaWNrLmJpbmQodGhpcyk7XG5cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMubW9kYWwuY2xhc3NMaXN0LmFkZCgnanMtc2hvdycpO1xuICAgICRib2R5LmNsYXNzTGlzdC5hZGQoJ2pzX19ib2R5LW5vLXNjcm9sbCcpO1xuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5tb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdqcy1zaG93Jyk7XG4gICAgJGJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnanNfX2JvZHktbm8tc2Nyb2xsJyk7XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub25PdmVybGF5Q2xpY2sgPSBmdW5jdGlvbihlKSB7XG4gICAgaWYgKGUudGFyZ2V0ID09PSB0aGlzLm92ZXJsYXkpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub25DbG9zZUNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5jbG9zZSgpO1xuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLm9uVHJpZ2dlckNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5vcGVuKCk7XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLm92ZXJsYXkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm9uT3ZlcmxheUNsaWNrKTtcbiAgICB0aGlzLmNsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vbkNsb3NlQ2xpY2spO1xuICAgIHRoaXMudHJpZ2dlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25UcmlnZ2VyQ2xpY2spO1xuICB9XG5cbiAgd2luZG93Lk1vZGFsID0gTW9kYWw7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICBjb25zdCBpbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaW5wdXQtcGhvbmUnKTtcblxuICBpZiAoIWlucHV0c1swXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGltID0gbmV3IElucHV0bWFzayhcIis3KDk5OSkgOTk5LTk5LTk5XCIpO1xuXG4gIGlucHV0cy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICBpbS5tYXNrKGl0ZW0pO1xuICB9KVxufSkoKTtcbiIsIigoKSA9PiB7XG4gIGNvbnN0IGl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNlYXJjaCcpO1xuICBjb25zdCBjbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zZWFyY2ggKyAuc2VhcmNoLWNsb3NlJyk7XG5cbiAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCAoKSA9PntcbiAgICAgIGl0ZW0ucGFyZW50Tm9kZS5wYXJlbnROb2RlLmNsYXNzTGlzdC5hZGQoJ2pzLWZvY3VzJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCAoKSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgIGl0ZW0udmFsdWUuc3BsaXQoJyAnKS5qb2luKCcnKSA9PT0gJydcbiAgICAgICkge1xuICAgICAgICBpdGVtLnZhbHVlID0gJyc7XG4gICAgICB9XG5cbiAgICAgIGlmIChcbiAgICAgICAgaXRlbS52YWx1ZSAhPT0gJydcbiAgICAgICAgJiYgIWl0ZW0uY2xhc3NMaXN0LmNvbnRhaW5zKCdqcy1pbnB1dGVkJylcbiAgICAgICkge1xuICAgICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ2pzLWlucHV0ZWQnKTtcbiAgICAgIH1cblxuICAgICAgaWYgKFxuICAgICAgICBpdGVtLnZhbHVlID09PSAnJ1xuICAgICAgICAmJiBpdGVtLmNsYXNzTGlzdC5jb250YWlucygnanMtaW5wdXRlZCcpXG4gICAgICApIHtcbiAgICAgICAgaXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdqcy1pbnB1dGVkJyk7XG4gICAgICB9XG4gICAgfSlcbiAgfSk7XG5cbiAgY2xvc2UuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICBjb25zdCBzZWFyY2ggPSBpdGVtLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XG4gICAgICBzZWFyY2gudmFsdWUgPSAnJztcbiAgICAgIGlmIChcbiAgICAgICAgc2VhcmNoLmNsYXNzTGlzdC5jb250YWlucygnanMtaW5wdXRlZCcpXG4gICAgICApIHtcbiAgICAgICAgc2VhcmNoLmNsYXNzTGlzdC5yZW1vdmUoJ2pzLWlucHV0ZWQnKTtcbiAgICAgIH1cbiAgICB9KVxuICB9KTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2xvdWQtc3RhdHVzX19pbnN0YWxsYXRpb24tZm9ybScpO1xuXG4gIGlmICghZm9ybSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGNvbXBhbnkgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoJy5jbG91ZC1zdGF0dXNfX2luc3RhbGxhdGlvbi1jb21wYW55IGlucHV0Jyk7XG5cbiAgY29uc3QgZmlsZUlucHV0QmxvY2sgPSBmb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jbG91ZC1zdGF0dXNfX2luc3RhbGxhdGlvbi1maWxlJyk7XG4gIGNvbnN0IGZpbGVJbnB1dCA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmlucHV0LWZpbGVfX2lucHV0Jyk7XG4gIGNvbnN0IGZpbGVDbGVhciA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmZpbGUtbG9hZF9fY2xlYXInKTtcblxuICBjb25zdCBzZW5kQnRuID0gZm9ybS5xdWVyeVNlbGVjdG9yKCcuY2xvdWQtc3RhdHVzX19pbnN0YWxsYXRpb24tZm9ybS1zZW5kJyk7XG5cbiAgY29uc3QgaXNGb3JtRmlsbGVkID0gZnVuY3Rpb24oKSB7XG4gICAgbGV0IGZpbGxlZCA9IHRydWU7XG5cbiAgICBpZiAoZmlsZUlucHV0LnZhbHVlID09PSAnJyB8fCBjb21wYW55LnZhbHVlID09PSAnJykge1xuICAgICAgZmlsbGVkID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZpbGxlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZpbGxlZDtcbiAgfVxuXG4gIGNvbnN0IGNoZWNrSW5wdXRzID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKGlzRm9ybUZpbGxlZCgpKSB7XG4gICAgICBzZW5kQnRuLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKVxuICAgICAgJiYgc2VuZEJ0bi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgfVxuXG4gICAgaWYgKCFpc0Zvcm1GaWxsZWQoKSkge1xuICAgICAgIXNlbmRCdG4uaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpXG4gICAgICAmJiBzZW5kQnRuLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnJyk7XG4gICAgfVxuICB9XG5cbiAgY29uc3Qgb25GaWxlQ2xlYXIgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXNlbmRCdG4uaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpKSB7XG4gICAgICBzZW5kQnRuLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnJyk7XG4gICAgfVxuICB9XG5cbiAgd2luZG93Lm9uSW5zdGFsbGF0aW9uRmlsZURyb3AgPSBmdW5jdGlvbigpIHtcbiAgICBjaGVja0lucHV0cygpO1xuICB9O1xuXG4gIGZpbGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB3aW5kb3cub25JbnN0YWxsYXRpb25GaWxlRHJvcCk7XG4gIGZpbGVDbGVhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uRmlsZUNsZWFyKTtcbiAgY29tcGFueS5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGNoZWNrSW5wdXRzKTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gIGNvbnN0IGNvbnRyYWN0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRyYWN0LW1vZGFsLXRyaWdnZXInKTtcbiAgY29uc3QgbW9kYWxDb250cmFjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250cmFjdC1tb2RhbCcpO1xuXG4gIGlmICghY29udHJhY3RCdG4gfHwgIW1vZGFsQ29udHJhY3QpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBtb2RhbCA9IG5ldyBNb2RhbChjb250cmFjdEJ0biwgbW9kYWxDb250cmFjdCk7XG5cbiAgJCgnLmNvbnRyYWN0LW1vZGFsX190b2dnbGUtYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgJCh0aGlzKS5uZXh0KCkuc2xpZGVUb2dnbGUoKTtcbiAgICAkKHRoaXMpLmNoaWxkcmVuKCcuaW5mby1ibG9ja19fdG9nZ2xlLWljb24nKS50b2dnbGVDbGFzcygnb3BlbmVkJyk7XG4gIH0pXG59KSgpO1xuIiwiKCgpID0+IHtcbiAgJCh3aW5kb3cpLmxvYWQoZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHN3aXBlciA9IG5ldyBTd2lwZXIoJy5tZW51LXBhX19jb250YWluZXInLCB7XG4gICAgICBmcmVlTW9kZTogdHJ1ZSxcbiAgICAgIHNsaWRlc1BlclZpZXc6ICdhdXRvJyxcbiAgICAgIGJyZWFrcG9pbnRzOiB7XG5cbiAgICAgICAgMTI4MDoge1xuICAgICAgICAgIGZyZWVNb2RlOiB0cnVlLFxuICAgICAgICAgIHNsaWRlc1BlclZpZXc6ICdhdXRvJyxcbiAgICAgICAgICBhbGxvd1RvdWNoTW92ZTogZmFsc2VcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gIGNvbnN0ICRtb2RhbEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5teS1jb21mb3J0LW1vZGFsLXRyaWdnZXInKTtcbiAgY29uc3QgJG1vZGFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215LWNvbWZvcnQtbW9kYWwnKTtcblxuICBpZiAoISRtb2RhbEJ0biB8fCAhJG1vZGFsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgbW9kYWwgPSBuZXcgTW9kYWwoJG1vZGFsQnRuLCAkbW9kYWwpO1xufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgY29uc3QgJG1vZGFsQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm15LWNvbWZvcnQtcGx1cy1tb2RhbC10cmlnZ2VyJyk7XG4gIGNvbnN0ICRtb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteS1jb21mb3J0LXBsdXMtbW9kYWwnKTtcblxuICBpZiAoISRtb2RhbEJ0biB8fCAhJG1vZGFsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgbW9kYWwgPSBuZXcgTW9kYWwoJG1vZGFsQnRuLCAkbW9kYWwpO1xufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgY29uc3QgJG1vZGFsQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm15LWNvbWZvcnQtcHJlbWl1bS1tb2RhbC10cmlnZ2VyJyk7XG4gIGNvbnN0ICRtb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteS1jb21mb3J0LXByZW1pdW0tbW9kYWwnKTtcblxuICBpZiAoISRtb2RhbEJ0biB8fCAhJG1vZGFsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgbW9kYWwgPSBuZXcgTW9kYWwoJG1vZGFsQnRuLCAkbW9kYWwpO1xufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJCgnLmZpcnN0LXBheW1lbnRfX2RldmljZXMtYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgJCh0aGlzKS5uZXh0KCkuc2xpZGVUb2dnbGUoKTtcbiAgICAkKHRoaXMpXG4gICAgICAuY2hpbGRyZW4oJy5maXJzdC1wYXltZW50X19kZXZpY2UtdG9nZ2xlLWljb24nKVxuICAgICAgLnRvZ2dsZUNsYXNzKCdvcGVuZWQnKTtcbiAgfSk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICBjb25zdCBzdWJzY3JpcHRpb25CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3Vic2NyaXB0aW9uLW1vZGFsLXRyaWdnZXInKTtcbiAgY29uc3QgbW9kYWxTdWJzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3Vic2NyaXB0aW9uLW1vZGFsJyk7XG5cbiAgaWYgKCFzdWJzY3JpcHRpb25CdG4gfHwgIW1vZGFsU3Vic2NyaXB0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgbW9kYWwgPSBuZXcgTW9kYWwoc3Vic2NyaXB0aW9uQnRuLCBtb2RhbFN1YnNjcmlwdGlvbik7XG5cbiAgJCgnLnN1YnNjcmlwdGlvbi1tb2RhbF9fdG9nZ2xlLWl0ZW0tYnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgJCh0aGlzKS5uZXh0KCkuc2xpZGVUb2dnbGUoKTtcbiAgICAkKHRoaXMpLmNoaWxkcmVuKCcuaW5mby1ibG9ja19fdG9nZ2xlLWljb24nKS50b2dnbGVDbGFzcygnb3BlbmVkJyk7XG4gIH0pXG59KSgpO1xuIl19
