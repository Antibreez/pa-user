"use strict";!function(){var e=document.querySelectorAll(".input-file__label");function t(e){var t=e.querySelector("input"),o=e.parentNode.querySelector(".file-load__clear");function n(e){e.preventDefault(),e.stopPropagation()}function i(t){e.classList.add("highlight")}function l(t){e.classList.remove("highlight")}["dragenter","dragover","dragleave","drop"].forEach((function(t){e.addEventListener(t,n,!1)})),["dragenter","dragover"].forEach((function(t){e.addEventListener(t,i,!1)})),["dragleave","drop"].forEach((function(t){e.addEventListener(t,l,!1)})),e.addEventListener("drop",(function(e){var o=e.dataTransfer.files;t.files&&t.files[0]&&(t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file"));t.files=o,r()}),!1);var r=function(){s(t)},s=function(t){if(t.files&&t.files[0]){var o=new FileReader;o.onload=function(o){e.parentNode.classList.add("loaded"),e.nextElementSibling.querySelector(".file-load__name").textContent=t.files[0].name,window.onInstallationFileDrop&&window.onInstallationFileDrop()},o.readAsDataURL(t.files[0])}};t.addEventListener("change",r),o.addEventListener("click",(function(){e.parentNode.classList.remove("loaded"),t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file")}))}window.makeFileLoad=t,e[0]&&e.forEach((function(e){t(e)}))}(),function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"));var t,o;window.addEventListener("resize",(t=function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"))},function(e){o&&clearTimeout(o),o=setTimeout(t,100,e)}));var n=document.querySelector("body");function i(e,t){this.trigger=e,this.modal=t,this.overlay=this.modal.querySelector(".modal__overlay"),this.closeBtn=this.modal.querySelector(".modal__close"),this.onOverlayClick=this.onOverlayClick.bind(this),this.onCloseClick=this.onCloseClick.bind(this),this.onTriggerClick=this.onTriggerClick.bind(this),this.addEventListeners()}i.prototype.open=function(){this.modal.classList.add("js-show"),n.classList.add("js__body-no-scroll")},i.prototype.close=function(){this.modal.classList.remove("js-show"),n.classList.remove("js__body-no-scroll")},i.prototype.onOverlayClick=function(e){e.target===this.overlay&&this.close()},i.prototype.onCloseClick=function(){this.close()},i.prototype.onTriggerClick=function(){this.open()},i.prototype.addEventListeners=function(){this.overlay.addEventListener("click",this.onOverlayClick),this.closeBtn.addEventListener("click",this.onCloseClick),this.trigger.addEventListener("click",this.onTriggerClick)},window.Modal=i}(),function(){var e=document.querySelectorAll(".input-phone");if(e[0]){var t=new Inputmask("+7(999) 999-99-99");e.forEach((function(e){t.mask(e)}))}}(),function(){var e=document.querySelectorAll(".search"),t=document.querySelectorAll(".search + .search-close");e.forEach((function(e){e.addEventListener("focus",(function(){e.parentNode.parentNode.classList.add("js-focus")}))})),e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))})),t.forEach((function(e){e.addEventListener("click",(function(){var t=e.previousElementSibling;t.value="",t.classList.contains("js-inputed")&&t.classList.remove("js-inputed")}))}))}(),$(window).on("load",(function(){new Swiper(".device-actions__slider-container",{freeMode:!0,slidesPerView:"auto"})})),function(){var e=document.querySelector(".cloud-status__installation-form");if(e){var t=e.querySelector(".cloud-status__installation-company input"),o=(e.querySelectorAll(".cloud-status__installation-file"),e.querySelector(".input-file__input")),n=e.querySelector(".file-load__clear"),i=e.querySelector(".cloud-status__installation-form-send"),l=function(){return""!==o.value&&""!==t.value},r=function(){l()&&i.hasAttribute("disabled")&&i.removeAttribute("disabled"),l()||!i.hasAttribute("disabled")&&i.setAttribute("disabled","")};window.onInstallationFileDrop=function(){r()},o.addEventListener("change",window.onInstallationFileDrop),n.addEventListener("click",(function(){i.hasAttribute("disabled")||i.setAttribute("disabled","")})),t.addEventListener("input",r)}}(),function(){var e=document.querySelector(".contract-modal-trigger"),t=document.querySelector(".contract-modal");if($(".contract-modal__toggle-btn").on("click",(function(){$(this).next().slideToggle(),$(this).children(".info-block__toggle-icon").toggleClass("opened")})),e&&t)new Modal(e,t)}(),function(){var e=document.querySelectorAll(".device-actions__item-link--freez"),t=document.getElementById("freez-modal");e[0]&&t&&e.forEach((function(e){new Modal(e,t)}))}(),$(window).on("load",(function(){new Swiper(".menu-pa__container",{freeMode:!0,slidesPerView:"auto",breakpoints:{1280:{freeMode:!0,slidesPerView:"auto",allowTouchMove:!1}}})})),function(){var e=document.querySelector(".my-comfort-modal-trigger"),t=document.getElementById("my-comfort-modal");if(e&&t)new Modal(e,t)}(),function(){var e=document.querySelector(".my-comfort-plus-modal-trigger"),t=document.getElementById("my-comfort-plus-modal");if(e&&t)new Modal(e,t)}(),function(){var e=document.querySelector(".my-comfort-premium-modal-trigger"),t=document.getElementById("my-comfort-premium-modal");if(e&&t)new Modal(e,t)}(),function(){var e=document.querySelectorAll(".device-actions__item-link--delete"),t=document.getElementById("not-use-modal"),o=document.querySelector("body");if(e[0]&&t){var n=document.querySelector(".not-use-modal__btn--no");e.forEach((function(e){new Modal(e,t)}));n.addEventListener("click",(function(){t.classList.remove("js-show"),o.classList.remove("js__body-no-scroll")}))}}(),$(".first-payment__devices-btn").on("click",(function(){$(this).next().slideToggle(),$(this).children(".first-payment__device-toggle-icon").toggleClass("opened")})),function(){var e=document.querySelector(".subscription-modal-trigger"),t=document.querySelector(".subscription-modal");if($(".subscription-modal__toggle-item-btn").on("click",(function(){$(this).next().slideToggle(),$(this).children(".info-block__toggle-icon").toggleClass("opened")})),e&&t)new Modal(e,t)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
